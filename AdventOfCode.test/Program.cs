using System;
using System.Diagnostics;
using System.IO;

namespace AdventOfCode.test
{
    class Program
    {
        static void Main(string[] args)
        {
            if (args.Length != 0)
            {
                throw new ArgumentException("ivalid number of arguments provided");
            }

            //string path = Directory.GetCurrentDirectory();
            string day = "6"; //args[1];
            string year = "2016"; //args[2];
            string inputName = "test"; //args[3];

            try
            {
                Console.WriteLine("..\\..\\..\\uploads\\" + inputName + ".txt");
                File.Move("..\\..\\..\\uploads\\" + inputName + ".txt", "..\\..\\..\\" + year + "\\input\\" + day + ".txt");
            }
            catch (IOException ex)
            {
                Console.WriteLine("file " + inputName + " doesn't exist.");
            }

            var res = Run("./" + year + "/" + day + ".py", "");
            Console.WriteLine(res);
        }

        private static string Run(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo
            {
                FileName = "python",
                Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args),
                UseShellExecute = false,// Do not use OS shell
                CreateNoWindow = true, // We don't need new window
                RedirectStandardOutput = true,// Any output, generated by application will be redirected back
                RedirectStandardError = true // Any error in standard output will be redirected back (for example exceptions)
            };
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    return result;
                }
            }
        }
    }
}
